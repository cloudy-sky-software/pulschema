openapi: 3.1.0
info:
  title: Fake API
  version: "2.0"
servers:
  - url: https://api.fake.com
    description: production

components:
  schemas:
    meta_properties:
      type: object
      description: Information about the response itself.
      properties:
        total:
          description: Number of objects returned by the request.
          type: integer
          example: 1
    meta:
      type: object
      properties:
        meta:
          allOf:
            - $ref: "#/components/schemas/meta_properties"
            - required:
                - total
      required:
        - meta
    action:
      type: object
      properties:
        id:
          type: integer
          description: >-
            A unique numeric ID that can be used to identify and reference an
            action.
          example: 36804636

  parameters:
    per_page:
      in: query
      name: per_page
      required: false
      description: Number of items returned per page
      schema:
        type: integer
        minimum: 1
        default: 20
        maximum: 200
      example: 2
    page:
      in: query
      name: page
      required: false
      description: Which 'page' of paginated results to return.
      schema:
        type: integer
        minimum: 1
        default: 1
      example: 1

  responses:
    actions:
      description: >-
        The results will be returned as a JSON object with an actions key.  This
        will be set to an array filled with action objects containing the
        standard action attributes
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  actions:
                    type: array
                    items:
                      $ref: "#/components/schemas/action"
              - $ref: "#/components/schemas/meta"
    actions2:
      description: >-
        The results will be returned as a JSON object with an actions key.  This
        will be set to an array filled with action objects containing the
        standard action attributes
      content:
        application/json:
          schema:
            type: object
            properties:
              actions:
                type: array
                items:
                  $ref: "#/components/schemas/action"

paths:
  /v2/actions:
    get:
      operationId: actions_list
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/actions"

  /v2/actions2:
    get:
      operationId: actions2_list
      parameters:
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/actions2"
