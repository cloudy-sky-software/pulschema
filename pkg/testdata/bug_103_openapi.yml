openapi: 3.1.0
info:
  title: Fake API
  version: "2.0"
servers:
  - url: https://api.fake.com
    description: production

components:
  schemas:
    meta_properties:
      type: object
      description: Information about the response itself.
      properties:
        total:
          description: Number of objects returned by the request.
          type: integer
          example: 1
    meta:
      type: object
      properties:
        meta:
          allOf:
            - $ref: "#/components/schemas/meta_properties"
            - required:
                - total
      required:
        - meta
    apps_get_logs_response:
      properties:
        historic_urls:
          items:
            type: string
            example: https://logs/build.log
          title: A list of URLs to archived log files
          type: array
        live_url:
          description: >-
            A URL of the real-time live logs. This URL may use either the
            `https://` or `wss://` protocols and will keep pushing live logs as
            they become available.
          type: string
          example: ws://logs/build
      type: object
    urn:
      type: string
      pattern: >-
        ^do:(dbaas|domain|droplet|floatingip|loadbalancer|space|volume|kubernetes|vpc):.*
      example: do:droplet:13457723
      description: >-
        The uniform resource name (URN) for the resource in the format
        do:resource_type:resource_id.
    resource:
      type: object
      properties:
        urn:
          $ref: "#/components/schemas/urn"
        assigned_at:
          type: string
          format: date-time
          example: "2018-09-28T19:26:37Z"
          description: >-
            A time value given in ISO8601 combined date and time format that
            represents when the project was created.
        links:
          type: object
          description: >-
            The links object contains the `self` object, which contains the
            resource relationship.
          properties:
            self:
              type: string
              format: uri
              example: https://api.digitalocean.com/v2/droplets/13457723
              description: A URI that can be used to retrieve the resource.
        status:
          type: string
          enum:
            - ok
            - not_found
            - assigned
            - already_assigned
            - service_down
          example: ok
          description: The status of assigning and fetching the resources.

  parameters:
    app_id:
      description: The app ID
      in: path
      name: app_id
      required: true
      schema:
        type: string
      example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
    deployment_id:
      description: The deployment ID
      in: path
      name: deployment_id
      required: true
      schema:
        type: string
      example: 3aa4d20e-5527-4c00-b496-601fbd22520a
    live_updates:
      description: Whether the logs should follow live updates.
      in: query
      name: follow
      schema:
        type: boolean
      example: true
    log_type:
      description: |-
        The type of logs to retrieve
        - BUILD: Build-time logs
        - DEPLOY: Deploy-time logs
        - RUN: Live run-time logs
      in: query
      name: type
      required: true
      schema:
        default: UNSPECIFIED
        enum:
          - UNSPECIFIED
          - BUILD
          - DEPLOY
          - RUN
        type: string
      example: BUILD
    project_id:
      in: path
      name: project_id
      description: A unique identifier for a project.
      required: true
      schema:
        type: string
        format: uuid
        minimum: 1
      example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
    per_page:
      in: query
      name: per_page
      required: false
      description: Number of items returned per page
      schema:
        type: integer
        minimum: 1
        default: 20
        maximum: 200
      example: 2
    page:
      in: query
      name: page
      required: false
      description: Which 'page' of paginated results to return.
      schema:
        type: integer
        minimum: 1
        default: 1
      example: 1
    time_wait:
      description: >-
        An optional time duration to wait if the underlying component instance
        is not immediately available. Default: `3m`.
      in: query
      name: pod_connection_timeout
      schema:
        type: string
      example: 3m

  responses:
    list_logs:
      description: A JSON object with urls that point to archived logs
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/apps_get_logs_response"
    resources_list:
      description: >-
        The response will be a JSON object with a key called `resources`. The
        value of this will be an object with the standard resource attributes.
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref: "#/components/schemas/resource"
              - $ref: "#/components/schemas/meta"

paths:
  /v2/apps/{app_id}/deployments/{deployment_id}/logs:
    get:
      operationId: apps_get_logs_aggregate
      summary: Retrieve Aggregate Deployment Logs
      description: >-
        Retrieve the logs of a past, in-progress, or active deployment. If a
        component name is specified, the logs will be limited to only that
        component. The response will include links to either real-time logs of
        an in-progress or active deployment or archived logs of a past
        deployment.
      tags:
        - Apps
      parameters:
        - $ref: "#/components/parameters/app_id"
        - $ref: "#/components/parameters/deployment_id"
        - $ref: "#/components/parameters/live_updates"
        - $ref: "#/components/parameters/log_type"
        - $ref: "#/components/parameters/time_wait"
      responses:
        "200":
          $ref: "#/components/responses/list_logs"

  /v2/apps/{app_id}/logs:
    get:
      operationId: apps_get_logs_active_deployment_aggregate
      summary: Retrieve Active Deployment Aggregate Logs
      description: >-
        Retrieve the logs of the active deployment if one exists. The response
        will include links to either real-time logs of an in-progress or active
        deployment or archived logs of a past deployment. Note log_type=BUILD
        logs will return logs associated with the current active deployment
        (being served). To view build logs associated with in-progress build,
        the query must explicitly reference the deployment id.
      tags:
        - Apps
      parameters:
        - $ref: "#/components/parameters/app_id"
        - $ref: "#/components/parameters/live_updates"
        - $ref: "#/components/parameters/log_type"
        - $ref: "#/components/parameters/time_wait"
      responses:
        "200":
          $ref: "#/components/responses/list_logs"

  /v2/projects/default/resources:
    get:
      operationId: projects_list_resources_default
      summary: List Default Project Resources
      description: >-
        To list all your resources in your default project, send a GET request
        to `/v2/projects/default/resources`.
      tags:
        - Project Resources
      responses:
        "200":
          $ref: "#/components/responses/resources_list"

  /v2/projects/{project_id}/resources:
    get:
      operationId: projects_list_resources
      summary: List Project Resources
      description: >-
        To list all your resources in a project, send a GET request to
        `/v2/projects/$PROJECT_ID/resources`.
      tags:
        - Project Resources
      parameters:
        - $ref: "#/components/parameters/project_id"
        - $ref: "#/components/parameters/per_page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          $ref: "#/components/responses/resources_list"
